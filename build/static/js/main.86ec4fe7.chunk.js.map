{"version":3,"sources":["App.js","index.js"],"names":["App","React","useState","rawText","setRawText","displayedText","setDisplayedText","PER","options","setOptions","callback","useCallback","entities","raw_text","a","fetch","method","headers","body","JSON","stringify","then","res","text","answ","className","placeholder","onChange","e","target","value","type","onClick","Object","keys","filter","option","id","prev","checked","for","LOC","ORG","DATE","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4QA0DeA,MAvDf,WAAgB,IAAD,EACmBC,IAAMC,SAAS,IADlC,mBACJC,EADI,KACKC,EADL,OAE+BH,IAAMC,SAAS,IAF9C,mBAEJG,EAFI,KAEWC,EAFX,OAGmBL,IAAMC,SAAS,CACzCK,KAAK,IAJE,mBAGJC,EAHI,KAGKC,EAHL,KAOLC,EAAWT,IAAMU,YAAN,uCAAkB,WAAOC,EAAUC,GAAjB,eAAAC,EAAA,sEACZC,MAAM,aAAc,CACnCC,OAAQ,OACRC,QAAS,CACL,eAAgB,kCAEpBC,KAAMC,KAAKC,UAAU,CACjBR,WACAC,eAELQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAVY,OACzBC,EADyB,OAY/BlB,EAAiBkB,GAZc,2CAAlB,wDAad,IAEH,OACI,sBAAKC,UAAU,MAAf,UACI,+IACA,sBAAKA,UAAU,WAAf,UACI,0BAAUC,YAAY,+FACtBC,SAAU,SAACC,GAAOxB,EAAWwB,EAAEC,OAAOC,QACtCA,MAAO3B,EAASsB,UAAU,SAASM,KAAK,SACxC,gCACI,wBAAQC,QAAS,kBAAMtB,EAASuB,OAAOC,KAAK1B,GAAS2B,QAAO,SAAAC,GAAM,OAAI5B,EAAQ4B,MAAUjC,IAAxF,oEACA,uBACA,uBACA,sBAAKsB,UAAU,aAAf,UACI,uBAAOM,KAAK,WAAWM,GAAG,MAAMV,SAAU,SAACC,GAAOnB,GAAW,SAAA6B,GAAI,kCAASA,GAAT,IAAe/B,IAAKqB,EAAEC,OAAOU,cAAaA,QAAS/B,EAAO,MAC3H,uBAAOgC,IAAI,MAAX,4CAA8B,uBAC9B,uBAAOT,KAAK,WAAWM,GAAG,MAAMV,SAAU,SAACC,GAAOnB,GAAW,SAAA6B,GAAI,kCAASA,GAAT,IAAeG,IAAKb,EAAEC,OAAOU,cAAaA,QAAS/B,EAAO,MAC3H,uBAAOgC,IAAI,MAAX,4CAA8B,uBAC9B,uBAAOT,KAAK,WAAWM,GAAG,MAAMV,SAAU,SAACC,GAAOnB,GAAW,SAAA6B,GAAI,kCAASA,GAAT,IAAeI,IAAKd,EAAEC,OAAOU,cAAaA,QAAS/B,EAAO,MAC3H,uBAAOgC,IAAI,MAAX,gFAAoC,uBACpC,uBAAOT,KAAK,WAAWM,GAAG,OAAOV,SAAU,SAACC,GAAOnB,GAAW,SAAA6B,GAAI,kCAASA,GAAT,IAAeK,KAAMf,EAAEC,OAAOU,cAAaA,QAAS/B,EAAO,OAC7H,uBAAOgC,IAAI,OAAX,+CAIZ,gCACI,6HACJ,qBAAKf,UAAU,YAAf,SACMpB,WC9ClBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.86ec4fe7.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nfunction App() {\n    const [rawText, setRawText] = React.useState('');\n    const [displayedText, setDisplayedText] = React.useState('');\n    const [options, setOptions] = React.useState({\n        PER: true\n    });\n\n    const callback = React.useCallback(async (entities, raw_text) => {\n        const answ = await fetch('/anonymize', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify({\n                entities,\n                raw_text\n            })\n        }).then(res => res.text());\n\n        setDisplayedText(answ);\n    }, []);\n\n    return (\n        <div className=\"App\">\n            <h2>Анонимизатор текста</h2>\n            <div className=\"PPPPPPPP\">\n                <textarea placeholder=\"Текст для очистки\"\n                onChange={(e) => {setRawText(e.target.value)}} \n                value={rawText} className=\"ToSend\" type=\"text\"/>\n                <div>\n                    <button onClick={() => callback(Object.keys(options).filter(option => options[option]), rawText)}>Отправить</button>\n                    <br/>\n                    <br/>\n                    <div className=\"Checkboxes\">\n                        <input type=\"checkbox\" id=\"PER\" onChange={(e) => {setOptions(prev => ({...prev, PER: e.target.checked}))}} checked={options['PER']} />\n                        <label for=\"PER\">Имена</label><br />\n                        <input type=\"checkbox\" id=\"LOC\" onChange={(e) => {setOptions(prev => ({...prev, LOC: e.target.checked}))}} checked={options['LOC']} />\n                        <label for=\"LOC\">Места</label><br />\n                        <input type=\"checkbox\" id=\"ORG\" onChange={(e) => {setOptions(prev => ({...prev, ORG: e.target.checked}))}} checked={options['ORG']} />\n                        <label for=\"ORG\">Организации</label><br />\n                        <input type=\"checkbox\" id=\"DATE\" onChange={(e) => {setOptions(prev => ({...prev, DATE: e.target.checked}))}} checked={options['DATE']} />\n                        <label for=\"DATE\">Даты</label>\n                    </div>\n                </div>\n            </div>\n            <div>\n                <h3>Вычищенный текст</h3>\n            <div className=\"ToDisplay\">\n                { displayedText }\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}